@page "/"
@using System.Diagnostics
@using System.Threading
@using SortingDeploy.Data

<h1>Hello world</h1>


<select class="form-control" @bind="sortingType">
    <option disabled selected hidden>Choice</option>
    <option>Bubble Sort</option>
    <option>Selection Sort</option>
    <option>Insertion Sort</option>
</select>

<p></p>
<p>Number of randoms:</p>
<input type="range" min="1" max="50" step="1" @bind="numberOfRandoms" />
<p>@printNumber</p>
<p>Range of randoms:</p>
<input type="range" min="1" max="100" step="1" @bind="rangeOfRandoms" />
<p>@printRange</p>
<button class="btn btn-primary" @onclick="Randomize">Click me</button>

<p>Random number: @stro</p>
<p>Sorted order: @strr</p>
<p>Test: @actual</p>

<SortingDeploy.Pages.Components.BarChart />



@code {

    SortingMethods srt = new SortingMethods();

    private int arraySize = 10;
    private int[] array;
    private string stro = "";
    private string strr = "";
    private string sortingType;
    private int numberOfRandoms;
    private int rangeOfRandoms;
    private int printNumber;
    private int printRange;
    private string actual;



    private async void Randomize()
    {

        array = new int[numberOfRandoms];
        arraySize = numberOfRandoms;

        stro = "";
        strr = "";
        srt.CreateRandomArray(arraySize, array, rangeOfRandoms);


        for (int i = 0; i < array.Length; i++)
        {
            stro = stro + " " + array[i];
        }

        if (sortingType == "Bubble Sort")
        {
            srt.BubbleSort(array, arraySize, this);

            for (int i = 0; i < array.Length; i++)
            {
                strr = strr + " " + array[i];
            }
            strr = strr + " Bubble";
        }
        else if (sortingType == "Selection Sort")
        {
            srt.SelectionSort(array, arraySize);

            for (int i = 0; i < array.Length; i++)
            {
                strr = strr + " " + array[i];
            }
            strr = strr + " Selection";
        }
        else if (sortingType == "Insertion Sort")
        {
            srt.InsertionSort(array, arraySize);

            for (int i = 0; i < array.Length; i++)
            {
                strr = strr + " " + array[i];
            }
            strr = strr + " Insertion";
        }

        printNumber = numberOfRandoms;
        printRange = rangeOfRandoms;


    }

    public void Update(int i)                               //This method is called in a for loop
    {                                                       //Problem to solve: why does Line 105 happens only once (when the for loop is finished)
        actual = i + " please";                             //while Line 106 happens as many times, as it should?! (see below)
        Debug.WriteLine("We are in the update");
        Debug.WriteLine(i);
        this.StateHasChanged();
    }
                                                            //'actual' is used to print out the received data 


}
